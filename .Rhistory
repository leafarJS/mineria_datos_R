data_weather %>%
count(year, month, day, hour, origin) %>%
filter(n > 1)
data_planes %>%
count(tailnum) %>%
data_weather %>%
count(year, month, day, hour, origin) %>%
filter(n > 1)
data_planes %>%
count(tailnum) %>%
weather %>%
count(year, month, day, hour, origin) %>%
filter(n > 1)
data_planes %>%
count(tailnum) %>%
data_weather %>%
count(year, month, day, hour, origin) %>%
filter(n > 1)
data_weather
data_planes %>%
count(tailnum) %>%
data_weather %>%
count(year, month, day, hour, origin) %>%
filter(n > 1)
data_planes %>%
count(tailnum) %>%
weather %>%
count(year, month, day, hour, origin) %>%
filter(n > 1)
library(nycflights13)
weather
data_planes %>%
count(tailnum) %>%
weather %>%
count(year, month, day, hour, origin) %>%
filter(n > 1)
data_planes %>%
count(tailnum) %>%
data_weather %>%
count(year, month, day, hour, origin)
data_weather <- weather %>% view()
data_planes %>%
count(tailnum) %>%
data_weather %>%
count(year, month, day)
data_planes %>%
count(tailnum)
data_weather %>%
count(year, month, day)
data_weather %>%
count(year, month, day, hour, origin)
data_weather %>%
count(year, month, day, hour, origin) %>%
filter(n>1)
data_flights <- flights
data_flights %>%
count(year, month day, flight) %>%
data_flights
data_flights %>%
count(year, month, day, flight) %>%
filter(n > 1)
data_flights %>%
count(year, month, day, tailnum) %>%
filter(n > 1)
data_flights_2 <- data_flights %>%
select(year:day, hour, origin, dest, tailnum, carrier)
data_airlines
data_flights_2 %>%
left_join(data_airlines, by = "carrier")
data_flights_2 %>%
select(-origin, -dest) %>%
left_join(data_airlines, by = "carrier")
data_flights_2 %>%
select(-origin, -dest) %>%
mutate(name = data_airlines$name[match(carrier, data_airlines$carrier)])
x <- tribble(
~key, ~val_x,
1, "x1",
2, "x2",
3, "x3"
)
y <- tribble(
~key, ~val_y,
1, "y1",
2, "y2",
4, "y3"
)
x
y
x %>%
inner_join(y, by = "~key")
x %>%
inner_join(y, by = "key")
x %>%
left_join(y, by = "key")
x %>%
right_join(y, by = "key")
x %>%
full_join(y, by = "key")
x <- tribble(
~key, ~val_x,
1, "x1",
2, "x2",
2, "x3",
1, "x4"
)
y <- tribble(
~key, ~val_y,
1, "y1",
2, "y2"
)
x %>%
left_join(y, by = "key")
x <- tribble(
~key, ~val_x,
1, "x1",
2, "x2",
2, "x3",
3, "x4"
)
y <- tribble(
~key, ~val_y,
1, "y1",
2, "y2",
2, "y3",
3, "y4"
)
x %>%
left_join(y, by = "key")
data_flights_2
data_flights_2 %>%
left_join(data_weather)
data_weather
data_flights_2 %>%
left_join(data_planes, by = "tailnum")
data_flights_2
print(data_airports)
print(data_flights_2)
data_flights_2 %>%
left_join(data_airports, c("dest" = "IAH"))
data_flights_2 %>%
left_join(data_airports, c("dest" = "iah"))
data_flights_2 %>%
left_join(data_airports, c("dest" = "faa"))
data_airports
data_airports$
data_airports$dst
unique(data_airports$dst)
view(data_airports)
unique(data_flights_2$dest)
unique(data_flights_2$dest == "faa")
unique(data_flights_2$dest = "faa")
data_airports
str(data_airports)
data_airports %>%
semi_join(data_flights, c("faa" = "dest")) %>%
ggplot(aes(
lon,
lat
))+
borders("state")
data_airports %>%
semi_join(data_flights, c("faa" = "dest")) %>%
ggplot(aes(
lon,
lat
))+
borders("state")+
geom_point()+
coord_quickmap()
data_airports
view(data_airports)
data_airports %>%
semi_join(data_flights, c("faa" = "dest")) %>%
ggplot(aes(
lon,
lat,
size = alt
))+
borders("state")+
geom_point()+
coord_quickmap()
data_flights
data_flights %>%
left_join(data_airports, c("lat" , "lon"))
data_flights %>%
left_join(data_airports, c("lat" = "lat"))
data_flights %>%
semi_join(data_airports, c("lat" = "lat"))
data_flights %>%
mutate(lat = semi_join(data_airports, by = "lat"))
view(data_flights)
view(data_flights)
View(data_airports)
data_flights %>%
full_join(data_airports)
data_flights %>%
full_join(data_airports = by "faa")
data_flights %>%
left_join(data_airports = by "faa")
data_flights %>%
semi_join(data_airports , c("faa" = "dest"))
top_dest <- data_flights %>%
count(dest, sort = TRUE) %>%
head(10)
top_dest
top_dest %>%
ggplot(aes(
dest,
n
))+
geom_point()
top_dest <- data_flights %>%
count(dest, sort = TRUE) %>%
head(20)
top_dest %>%
ggplot(aes(
dest,
n
))+
geom_point()
top_dest %>%
ggplot(aes(
dest,
n
))+
geom_point()+
geom_smooth()
top_dest %>%
ggplot(aes(
dest,
n
))+
geom_point()+
geom_smooth(method = 'loess')
top_dest %>%
ggplot(aes(
dest,
n
))+
geom_point()+
geom_smooth(method = 'lm')
top_dest %>%
ggplot(aes(
dest,
n
))+
geom_point()+
geom_smooth(method = 'lm', formula = 'y ~ x')
top_dest %>%
ggplot(aes(
n,
dest
))+
geom_point()+
geom_smooth(method = 'lm', formula = 'y ~ x')
top_dest %>%
mutate(n = fct_reorder(n)) %>%
ggplot(aes(
n,
dest
))+
geom_point()+
geom_smooth(method = 'lm', formula = 'y ~ x')
top_dest %>%
ggplot(aes(
n,
dest
))+
geom_point()+
geom_smooth(method = 'lm', formula = 'y ~ x')
top_dest %>%
ggplot(aes(
n,
dest
))+
geom_point()+
geom_smooth()
top_dest %>%
ggplot(aes(
n,
dest
))+
geom_point()
data_flights %>%
filter(dest %in% top_dest$dest )
data_flights %>%
semi_join(top_dest)
data_flights %>%
anti_join(data_planes, by = "tailnum")
data_flights %>%
anti_join(data_planes, by = "tailnum") %>%
count(tailnum, sort = TRUE)
library(tidyverse)
library(dplyr)
library(tidytext)
library(ggplot2)
library(igraph)
library(ggraph)
library(widyr)
library(nycflights13)
string_1 <- "Esto es un String"
string_2 <- "Esto es un 'String'"
string_3 <- 'Esto es un "string"'
string_4 <- "Esto es un '\'String'\'"
string_5 <- 'Esto es un "\"string"\"'
string_1, string_2, string_3, string_4, string_5
string_1
string_2
string_3
string_4
string_5
string_1 <- "Esto es un String en R"
string_2 <- "Esto es un 'String' en R"
string_3 <- 'Esto es un "string" en R'
string_4 <- "Esto es un '\'String'\' en R"
string_5 <- 'Esto es un "\"string"\" en R'
string_1
string_2
string_3
string_4
string_5
string_1 <- "Esto es un String en R"
string_2 <- "Esto es un 'String' en R"
string_3 <- 'Esto es un "string" en R'
string_4 <- "Esto es un \'String'\ en R"
string_5 <- 'Esto es un \"string"\ en R'
string_1
string_2
string_3
string_4
string_5
string_1 <- "Esto es un String en R"
string_2 <- "Esto es un 'String' en R"
string_3 <- 'Esto es un "string" en R'
string_4 <- "Esto es un \'String'\ en R"
string_5 <- 'Esto es un "\string\" en R'
string_1 <- "Esto es un String en R"
string_2 <- "Esto es un 'String' en R"
string_3 <- 'Esto es un "string" en R'
string_4 <- "Esto es un \'String'\ en R"
string_5 <- 'Esto es un \"String"\ en R'
string_1
string_2
string_3
string_4
string_5
string_1 <- "Esto es un String en R"
string_2 <- "Esto es un 'String' en R"
string_3 <- 'Esto es un "string" en R'
string_4 <- "Esto es un \'String'\ en R"
string_5 <- 'Esto es un "\String"\ en R'
string_1 <- "Esto es un String en R"
string_2 <- "Esto es un 'String' en R"
string_3 <- 'Esto es un "string" en R'
string_4 <- "Esto es un \'String'\ en R"
string_5 <- 'Esto es un "\String\" en R'
string_1 <- "Esto es un String en R"
string_2 <- "Esto es un 'String' en R"
string_3 <- 'Esto es un "string" en R'
string_4 <- "Esto es un \'String'\ en R"
string_5 <- 'Esto es un \"String\" en R'
string_1
string_2
string_3
string_4
string_5
string_1 <- "Esto es un String en R"
string_2 <- "Esto es un 'String' en R"
string_3 <- 'Esto es un "string" en R'
string_4 <- "Esto es un \'String'\ en R"
string_5 <- 'Esto es un "\"String"\" en R'
string_1
string_2
string_3
string_4
string_5
double_quote <- "\"" # or '"'
single_quote <- '\'' # or "'"
double_quote
single_quote
string_1 <- "Esto es un String en R"
string_2 <- "Esto es un 'String' en R"
string_3 <- 'Esto es un "string" en R'
string_1
string_2
string_3
string_3 <- 'Esto es un "'"string"'" en R'
string_3
x <- c("\"", "\\")
x
writeLines(x)
x <- "esto es una frase"
length(x)
str_length(c("a", "ab", "abc", "abcd", "abcde", NA))
str_c("jor", "ge")
str_c("ra", "fa", "el")
str_c("jorge", "rafael", sep = ",")
x <- c("abc", NA)
str_c("|-", x, "-|")
str_c("|-", str_replace_na(x), "-|")
name <- "Hadley"
time_of day <- "morning"
brithday <- FALSE
time_of_day <- "morning"
str_c("Good", time_of_day, " ", name, if(birthday) "and HAPPY BIRTHDAY", ".")
str_c("Good", time_of_day, " ", name, if (birthday) "and HAPPY BIRTHDAY", ".")
name <- "Hadley"
time_of_day <- "morning"
brithday <- FALSE
str_c("Good", time_of_day, " ", name, if (brithday) "and HAPPY BIRTHDAY", ".")
str_c("Good ", time_of_day, " ", name, if (brithday) "and HAPPY BIRTHDAY", ".")
brithday <- TRUE
str_c("Good ", time_of_day, " ", name, if (brithday) "and HAPPY BIRTHDAY", ".")
str_c(c("a", "la", "verga"), collapse = ", ")
# Cadena de sub consjuntos
x <- c("Apple", "Banana", "Pear", "12345", "67890")
str_c(x, 1, 3)
str_sub(x, 1, 3)
str_sub(x, -3, -1)
str_sub(x, 1, 1)
str_sub(x, 1, 1) <- str_to_lower(str_sub(x,1,1))
x
str_sub(x, 1, 1) <- str_to_upper(str_sub(x,1,1))
x
x <- c("uno", "dos", "tres")
str_sub(x, 1, 1) <- str_to_title(str_sub(x,1,1))
x
x <- c("auto", "radio", "winbledon")
str_sort(x, locale = "es")
str_sort(-x, locale = "en")
str_sort(x, locale = "en")
paste(1:12)
paste0(1:12)
(nth <- paste0(1:12, c("st", "nd", "rd", rep("th", 9))))
paste(month.abb, "Este es el", nth, "mes del año.")
paste(month.abb, "es el", nth, "mes del año.")
paste(month.abb, letters)
paste0(n-ésimo, colapsar = ",")
paste0(n-esimo, colapsar = ",")
paste(month.abb, nth, sep = ": ", colapso = "; ")
x <- c("1234567890")
str_c(x)
str_c(x, 2, 3)
str_c(x, 2, 3, collapse = "; ")
str_c(x, 2, 3, collapse = ", ")
x <- c("1234567890")
str_c(x, 2, 3, collapse = ", ")
x <- c("1234567890", "0987654321")
str_c(x, 2, 3)
str_c(x, 2, 3, collapse = ", ")
str_length(x)
str_length(x)/2
x <- "123456789"
str_length(x)/2 + 1
str_length(x)
str_length(x)+1
(str_length(x)+1)/2
if(str_length(x) % 2 == 0)
if(str_length(x) % 2)
if(str_length(x))
return(TRUE)
str_length(x)
str_length(x) % 2
(str_length(x) % 2)
(str_length(x) % 2 == 0)
(str_length(x) %% 2 == 0)
x = <- "01234567891"
if(str_length(x) % 2 == 0){
(str_length(x) %% 2 == 0)
(str_length(x) %% 2)
x = <- "0123456789"
if(str_length(x) % 2 == 0){
(str_length(x) %% 2)
str_length(x)
(str_length(x) %% 2)
}
TRUE
x = <- "01234567891"
str_length(x)
if(str_length(x) % 2 == 0){
if(str_length(x) % 2 == 0){
x = <- "01234567891"
str_length(x)
if(str_length(x) % 2 == 0){
num <- 1:8
ifelse(num %% 2 == 0, "Par", "Non")
num <- 1:9
ifelse(num %% 2 == 0, "Par", "Non")
num %% 2
x = <- "01234567891"
str_length(x)
ifelse(str_length(x) %% 2 == 0, (str_length(x)+1)/2, str_length(x)/2 )
x = <- "0123456789"
str_length(x)
ifelse(str_length(x) %% 2 == 0, (str_length(x)+1)/2, str_length(x)/2 )
x = <- "123"
str_length(x)
x = <- "123"
str_length(x)
x <- "123"
str_length(x)
ifelse(str_length(x) %% 2 == 0, (str_length(x)+1)/2, str_length(x)/2 )
x <- "12345"
str_length(x)/2
str_sub(str_length(x)/2)
x <- c("auto", "radio", "winbledon")
str_wrap(x)
str_trim(x)
x <- c("  auto  ", "  radio", "winbledon   ")
str_wrap(x)
str_trim(x)
